{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnonymousCoder = void 0;\n\nvar abstract_coder_1 = require(\"./abstract-coder\"); // Clones the functionality of an existing Coder, but without a localName\n\n\nvar AnonymousCoder =\n/** @class */\nfunction (_super) {\n  __extends(AnonymousCoder, _super);\n\n  function AnonymousCoder(coder) {\n    var _this = _super.call(this, coder.name, coder.type, undefined, coder.dynamic) || this;\n\n    _this.coder = coder;\n    return _this;\n  }\n\n  AnonymousCoder.prototype.defaultValue = function () {\n    return this.coder.defaultValue();\n  };\n\n  AnonymousCoder.prototype.encode = function (writer, value) {\n    return this.coder.encode(writer, value);\n  };\n\n  AnonymousCoder.prototype.decode = function (reader) {\n    return this.coder.decode(reader);\n  };\n\n  return AnonymousCoder;\n}(abstract_coder_1.Coder);\n\nexports.AnonymousCoder = AnonymousCoder;","map":{"version":3,"sources":["../../src.ts/coders/anonymous.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAA,gBAAA,GAAA,OAAA,CAAA,kBAAA,CAAA,C,CAEA;;;AACA,IAAA,cAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoC,EAAA,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;;AAGhC,WAAA,cAAA,CAAY,KAAZ,EAAwB;AAAxB,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAK,CAAC,IAAZ,EAAkB,KAAK,CAAC,IAAxB,EAA8B,SAA9B,EAAyC,KAAK,CAAC,OAA/C,KAAuD,IAD3D;;AAEI,IAAA,KAAI,CAAC,KAAL,GAAa,KAAb;;AACH;;AAED,EAAA,cAAA,CAAA,SAAA,CAAA,YAAA,GAAA,YAAA;AACI,WAAO,KAAK,KAAL,CAAW,YAAX,EAAP;AACH,GAFD;;AAIA,EAAA,cAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,MAAP,EAAuB,KAAvB,EAAiC;AAC7B,WAAO,KAAK,KAAL,CAAW,MAAX,CAAkB,MAAlB,EAA0B,KAA1B,CAAP;AACH,GAFD;;AAIA,EAAA,cAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,MAAP,EAAqB;AACjB,WAAO,KAAK,KAAL,CAAW,MAAX,CAAkB,MAAlB,CAAP;AACH,GAFD;;AAGJ,SAAA,cAAA;AAAC,CAnBD,CAAoC,gBAAA,CAAA,KAApC,CAAA;;AAAa,OAAA,CAAA,cAAA,GAAA,cAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AnonymousCoder = void 0;\nvar abstract_coder_1 = require(\"./abstract-coder\");\n// Clones the functionality of an existing Coder, but without a localName\nvar AnonymousCoder = /** @class */ (function (_super) {\n    __extends(AnonymousCoder, _super);\n    function AnonymousCoder(coder) {\n        var _this = _super.call(this, coder.name, coder.type, undefined, coder.dynamic) || this;\n        _this.coder = coder;\n        return _this;\n    }\n    AnonymousCoder.prototype.defaultValue = function () {\n        return this.coder.defaultValue();\n    };\n    AnonymousCoder.prototype.encode = function (writer, value) {\n        return this.coder.encode(writer, value);\n    };\n    AnonymousCoder.prototype.decode = function (reader) {\n        return this.coder.decode(reader);\n    };\n    return AnonymousCoder;\n}(abstract_coder_1.Coder));\nexports.AnonymousCoder = AnonymousCoder;\n//# sourceMappingURL=anonymous.js.map"]},"metadata":{},"sourceType":"script"}