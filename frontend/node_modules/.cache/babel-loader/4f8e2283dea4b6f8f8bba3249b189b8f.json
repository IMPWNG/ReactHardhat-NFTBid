{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Reader = exports.Writer = exports.Coder = exports.checkResultErrors = void 0;\n\nvar bytes_1 = require(\"@ethersproject/bytes\");\n\nvar bignumber_1 = require(\"@ethersproject/bignumber\");\n\nvar properties_1 = require(\"@ethersproject/properties\");\n\nvar logger_1 = require(\"@ethersproject/logger\");\n\nvar _version_1 = require(\"../_version\");\n\nvar logger = new logger_1.Logger(_version_1.version);\n\nfunction checkResultErrors(result) {\n  // Find the first error (if any)\n  var errors = [];\n\n  var checkErrors = function (path, object) {\n    if (!Array.isArray(object)) {\n      return;\n    }\n\n    for (var key in object) {\n      var childPath = path.slice();\n      childPath.push(key);\n\n      try {\n        checkErrors(childPath, object[key]);\n      } catch (error) {\n        errors.push({\n          path: childPath,\n          error: error\n        });\n      }\n    }\n  };\n\n  checkErrors([], result);\n  return errors;\n}\n\nexports.checkResultErrors = checkResultErrors;\n\nvar Coder =\n/** @class */\nfunction () {\n  function Coder(name, type, localName, dynamic) {\n    // @TODO: defineReadOnly these\n    this.name = name;\n    this.type = type;\n    this.localName = localName;\n    this.dynamic = dynamic;\n  }\n\n  Coder.prototype._throwError = function (message, value) {\n    logger.throwArgumentError(message, this.localName, value);\n  };\n\n  return Coder;\n}();\n\nexports.Coder = Coder;\n\nvar Writer =\n/** @class */\nfunction () {\n  function Writer(wordSize) {\n    properties_1.defineReadOnly(this, \"wordSize\", wordSize || 32);\n    this._data = [];\n    this._dataLength = 0;\n    this._padding = new Uint8Array(wordSize);\n  }\n\n  Object.defineProperty(Writer.prototype, \"data\", {\n    get: function () {\n      return bytes_1.hexConcat(this._data);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Writer.prototype, \"length\", {\n    get: function () {\n      return this._dataLength;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Writer.prototype._writeData = function (data) {\n    this._data.push(data);\n\n    this._dataLength += data.length;\n    return data.length;\n  };\n\n  Writer.prototype.appendWriter = function (writer) {\n    return this._writeData(bytes_1.concat(writer._data));\n  }; // Arrayish items; padded on the right to wordSize\n\n\n  Writer.prototype.writeBytes = function (value) {\n    var bytes = bytes_1.arrayify(value);\n    var paddingOffset = bytes.length % this.wordSize;\n\n    if (paddingOffset) {\n      bytes = bytes_1.concat([bytes, this._padding.slice(paddingOffset)]);\n    }\n\n    return this._writeData(bytes);\n  };\n\n  Writer.prototype._getValue = function (value) {\n    var bytes = bytes_1.arrayify(bignumber_1.BigNumber.from(value));\n\n    if (bytes.length > this.wordSize) {\n      logger.throwError(\"value out-of-bounds\", logger_1.Logger.errors.BUFFER_OVERRUN, {\n        length: this.wordSize,\n        offset: bytes.length\n      });\n    }\n\n    if (bytes.length % this.wordSize) {\n      bytes = bytes_1.concat([this._padding.slice(bytes.length % this.wordSize), bytes]);\n    }\n\n    return bytes;\n  }; // BigNumberish items; padded on the left to wordSize\n\n\n  Writer.prototype.writeValue = function (value) {\n    return this._writeData(this._getValue(value));\n  };\n\n  Writer.prototype.writeUpdatableValue = function () {\n    var _this = this;\n\n    var offset = this._data.length;\n\n    this._data.push(this._padding);\n\n    this._dataLength += this.wordSize;\n    return function (value) {\n      _this._data[offset] = _this._getValue(value);\n    };\n  };\n\n  return Writer;\n}();\n\nexports.Writer = Writer;\n\nvar Reader =\n/** @class */\nfunction () {\n  function Reader(data, wordSize, coerceFunc, allowLoose) {\n    properties_1.defineReadOnly(this, \"_data\", bytes_1.arrayify(data));\n    properties_1.defineReadOnly(this, \"wordSize\", wordSize || 32);\n    properties_1.defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n    properties_1.defineReadOnly(this, \"allowLoose\", allowLoose);\n    this._offset = 0;\n  }\n\n  Object.defineProperty(Reader.prototype, \"data\", {\n    get: function () {\n      return bytes_1.hexlify(this._data);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reader.prototype, \"consumed\", {\n    get: function () {\n      return this._offset;\n    },\n    enumerable: false,\n    configurable: true\n  }); // The default Coerce function\n\n  Reader.coerce = function (name, value) {\n    var match = name.match(\"^u?int([0-9]+)$\");\n\n    if (match && parseInt(match[1]) <= 48) {\n      value = value.toNumber();\n    }\n\n    return value;\n  };\n\n  Reader.prototype.coerce = function (name, value) {\n    if (this._coerceFunc) {\n      return this._coerceFunc(name, value);\n    }\n\n    return Reader.coerce(name, value);\n  };\n\n  Reader.prototype._peekBytes = function (offset, length, loose) {\n    var alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n\n    if (this._offset + alignedLength > this._data.length) {\n      if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n        alignedLength = length;\n      } else {\n        logger.throwError(\"data out-of-bounds\", logger_1.Logger.errors.BUFFER_OVERRUN, {\n          length: this._data.length,\n          offset: this._offset + alignedLength\n        });\n      }\n    }\n\n    return this._data.slice(this._offset, this._offset + alignedLength);\n  };\n\n  Reader.prototype.subReader = function (offset) {\n    return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n  };\n\n  Reader.prototype.readBytes = function (length, loose) {\n    var bytes = this._peekBytes(0, length, !!loose);\n\n    this._offset += bytes.length; // @TODO: Make sure the length..end bytes are all 0?\n\n    return bytes.slice(0, length);\n  };\n\n  Reader.prototype.readValue = function () {\n    return bignumber_1.BigNumber.from(this.readBytes(this.wordSize));\n  };\n\n  return Reader;\n}();\n\nexports.Reader = Reader;","map":{"version":3,"sources":["../../src.ts/coders/abstract-coder.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Reader = exports.Writer = exports.Coder = exports.checkResultErrors = void 0;\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar bignumber_1 = require(\"@ethersproject/bignumber\");\nvar properties_1 = require(\"@ethersproject/properties\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"../_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nfunction checkResultErrors(result) {\n    // Find the first error (if any)\n    var errors = [];\n    var checkErrors = function (path, object) {\n        if (!Array.isArray(object)) {\n            return;\n        }\n        for (var key in object) {\n            var childPath = path.slice();\n            childPath.push(key);\n            try {\n                checkErrors(childPath, object[key]);\n            }\n            catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    };\n    checkErrors([], result);\n    return errors;\n}\nexports.checkResultErrors = checkResultErrors;\nvar Coder = /** @class */ (function () {\n    function Coder(name, type, localName, dynamic) {\n        // @TODO: defineReadOnly these\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n    Coder.prototype._throwError = function (message, value) {\n        logger.throwArgumentError(message, this.localName, value);\n    };\n    return Coder;\n}());\nexports.Coder = Coder;\nvar Writer = /** @class */ (function () {\n    function Writer(wordSize) {\n        properties_1.defineReadOnly(this, \"wordSize\", wordSize || 32);\n        this._data = [];\n        this._dataLength = 0;\n        this._padding = new Uint8Array(wordSize);\n    }\n    Object.defineProperty(Writer.prototype, \"data\", {\n        get: function () {\n            return bytes_1.hexConcat(this._data);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Writer.prototype, \"length\", {\n        get: function () { return this._dataLength; },\n        enumerable: false,\n        configurable: true\n    });\n    Writer.prototype._writeData = function (data) {\n        this._data.push(data);\n        this._dataLength += data.length;\n        return data.length;\n    };\n    Writer.prototype.appendWriter = function (writer) {\n        return this._writeData(bytes_1.concat(writer._data));\n    };\n    // Arrayish items; padded on the right to wordSize\n    Writer.prototype.writeBytes = function (value) {\n        var bytes = bytes_1.arrayify(value);\n        var paddingOffset = bytes.length % this.wordSize;\n        if (paddingOffset) {\n            bytes = bytes_1.concat([bytes, this._padding.slice(paddingOffset)]);\n        }\n        return this._writeData(bytes);\n    };\n    Writer.prototype._getValue = function (value) {\n        var bytes = bytes_1.arrayify(bignumber_1.BigNumber.from(value));\n        if (bytes.length > this.wordSize) {\n            logger.throwError(\"value out-of-bounds\", logger_1.Logger.errors.BUFFER_OVERRUN, {\n                length: this.wordSize,\n                offset: bytes.length\n            });\n        }\n        if (bytes.length % this.wordSize) {\n            bytes = bytes_1.concat([this._padding.slice(bytes.length % this.wordSize), bytes]);\n        }\n        return bytes;\n    };\n    // BigNumberish items; padded on the left to wordSize\n    Writer.prototype.writeValue = function (value) {\n        return this._writeData(this._getValue(value));\n    };\n    Writer.prototype.writeUpdatableValue = function () {\n        var _this = this;\n        var offset = this._data.length;\n        this._data.push(this._padding);\n        this._dataLength += this.wordSize;\n        return function (value) {\n            _this._data[offset] = _this._getValue(value);\n        };\n    };\n    return Writer;\n}());\nexports.Writer = Writer;\nvar Reader = /** @class */ (function () {\n    function Reader(data, wordSize, coerceFunc, allowLoose) {\n        properties_1.defineReadOnly(this, \"_data\", bytes_1.arrayify(data));\n        properties_1.defineReadOnly(this, \"wordSize\", wordSize || 32);\n        properties_1.defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n        properties_1.defineReadOnly(this, \"allowLoose\", allowLoose);\n        this._offset = 0;\n    }\n    Object.defineProperty(Reader.prototype, \"data\", {\n        get: function () { return bytes_1.hexlify(this._data); },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Reader.prototype, \"consumed\", {\n        get: function () { return this._offset; },\n        enumerable: false,\n        configurable: true\n    });\n    // The default Coerce function\n    Reader.coerce = function (name, value) {\n        var match = name.match(\"^u?int([0-9]+)$\");\n        if (match && parseInt(match[1]) <= 48) {\n            value = value.toNumber();\n        }\n        return value;\n    };\n    Reader.prototype.coerce = function (name, value) {\n        if (this._coerceFunc) {\n            return this._coerceFunc(name, value);\n        }\n        return Reader.coerce(name, value);\n    };\n    Reader.prototype._peekBytes = function (offset, length, loose) {\n        var alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n        if (this._offset + alignedLength > this._data.length) {\n            if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n                alignedLength = length;\n            }\n            else {\n                logger.throwError(\"data out-of-bounds\", logger_1.Logger.errors.BUFFER_OVERRUN, {\n                    length: this._data.length,\n                    offset: this._offset + alignedLength\n                });\n            }\n        }\n        return this._data.slice(this._offset, this._offset + alignedLength);\n    };\n    Reader.prototype.subReader = function (offset) {\n        return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n    };\n    Reader.prototype.readBytes = function (length, loose) {\n        var bytes = this._peekBytes(0, length, !!loose);\n        this._offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    };\n    Reader.prototype.readValue = function () {\n        return bignumber_1.BigNumber.from(this.readBytes(this.wordSize));\n    };\n    return Reader;\n}());\nexports.Reader = Reader;\n//# sourceMappingURL=abstract-coder.js.map"]},"metadata":{},"sourceType":"script"}