{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultAbiCoder = exports.AbiCoder = void 0; // See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\n\nvar bytes_1 = require(\"@ethersproject/bytes\");\n\nvar properties_1 = require(\"@ethersproject/properties\");\n\nvar logger_1 = require(\"@ethersproject/logger\");\n\nvar _version_1 = require(\"./_version\");\n\nvar logger = new logger_1.Logger(_version_1.version);\n\nvar abstract_coder_1 = require(\"./coders/abstract-coder\");\n\nvar address_1 = require(\"./coders/address\");\n\nvar array_1 = require(\"./coders/array\");\n\nvar boolean_1 = require(\"./coders/boolean\");\n\nvar bytes_2 = require(\"./coders/bytes\");\n\nvar fixed_bytes_1 = require(\"./coders/fixed-bytes\");\n\nvar null_1 = require(\"./coders/null\");\n\nvar number_1 = require(\"./coders/number\");\n\nvar string_1 = require(\"./coders/string\");\n\nvar tuple_1 = require(\"./coders/tuple\");\n\nvar fragments_1 = require(\"./fragments\");\n\nvar paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nvar paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\n\nvar AbiCoder =\n/** @class */\nfunction () {\n  function AbiCoder(coerceFunc) {\n    var _newTarget = this.constructor;\n    logger.checkNew(_newTarget, AbiCoder);\n    properties_1.defineReadOnly(this, \"coerceFunc\", coerceFunc || null);\n  }\n\n  AbiCoder.prototype._getCoder = function (param) {\n    var _this = this;\n\n    switch (param.baseType) {\n      case \"address\":\n        return new address_1.AddressCoder(param.name);\n\n      case \"bool\":\n        return new boolean_1.BooleanCoder(param.name);\n\n      case \"string\":\n        return new string_1.StringCoder(param.name);\n\n      case \"bytes\":\n        return new bytes_2.BytesCoder(param.name);\n\n      case \"array\":\n        return new array_1.ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n\n      case \"tuple\":\n        return new tuple_1.TupleCoder((param.components || []).map(function (component) {\n          return _this._getCoder(component);\n        }), param.name);\n\n      case \"\":\n        return new null_1.NullCoder(param.name);\n    } // u?int[0-9]*\n\n\n    var match = param.type.match(paramTypeNumber);\n\n    if (match) {\n      var size = parseInt(match[2] || \"256\");\n\n      if (size === 0 || size > 256 || size % 8 !== 0) {\n        logger.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n      }\n\n      return new number_1.NumberCoder(size / 8, match[1] === \"int\", param.name);\n    } // bytes[0-9]+\n\n\n    match = param.type.match(paramTypeBytes);\n\n    if (match) {\n      var size = parseInt(match[1]);\n\n      if (size === 0 || size > 32) {\n        logger.throwArgumentError(\"invalid bytes length\", \"param\", param);\n      }\n\n      return new fixed_bytes_1.FixedBytesCoder(size, param.name);\n    }\n\n    return logger.throwArgumentError(\"invalid type\", \"type\", param.type);\n  };\n\n  AbiCoder.prototype._getWordSize = function () {\n    return 32;\n  };\n\n  AbiCoder.prototype._getReader = function (data, allowLoose) {\n    return new abstract_coder_1.Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n  };\n\n  AbiCoder.prototype._getWriter = function () {\n    return new abstract_coder_1.Writer(this._getWordSize());\n  };\n\n  AbiCoder.prototype.getDefaultValue = function (types) {\n    var _this = this;\n\n    var coders = types.map(function (type) {\n      return _this._getCoder(fragments_1.ParamType.from(type));\n    });\n    var coder = new tuple_1.TupleCoder(coders, \"_\");\n    return coder.defaultValue();\n  };\n\n  AbiCoder.prototype.encode = function (types, values) {\n    var _this = this;\n\n    if (types.length !== values.length) {\n      logger.throwError(\"types/values length mismatch\", logger_1.Logger.errors.INVALID_ARGUMENT, {\n        count: {\n          types: types.length,\n          values: values.length\n        },\n        value: {\n          types: types,\n          values: values\n        }\n      });\n    }\n\n    var coders = types.map(function (type) {\n      return _this._getCoder(fragments_1.ParamType.from(type));\n    });\n    var coder = new tuple_1.TupleCoder(coders, \"_\");\n\n    var writer = this._getWriter();\n\n    coder.encode(writer, values);\n    return writer.data;\n  };\n\n  AbiCoder.prototype.decode = function (types, data, loose) {\n    var _this = this;\n\n    var coders = types.map(function (type) {\n      return _this._getCoder(fragments_1.ParamType.from(type));\n    });\n    var coder = new tuple_1.TupleCoder(coders, \"_\");\n    return coder.decode(this._getReader(bytes_1.arrayify(data), loose));\n  };\n\n  return AbiCoder;\n}();\n\nexports.AbiCoder = AbiCoder;\nexports.defaultAbiCoder = new AbiCoder();","map":{"version":3,"sources":["../src.ts/abi-coder.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultAbiCoder = exports.AbiCoder = void 0;\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar properties_1 = require(\"@ethersproject/properties\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nvar abstract_coder_1 = require(\"./coders/abstract-coder\");\nvar address_1 = require(\"./coders/address\");\nvar array_1 = require(\"./coders/array\");\nvar boolean_1 = require(\"./coders/boolean\");\nvar bytes_2 = require(\"./coders/bytes\");\nvar fixed_bytes_1 = require(\"./coders/fixed-bytes\");\nvar null_1 = require(\"./coders/null\");\nvar number_1 = require(\"./coders/number\");\nvar string_1 = require(\"./coders/string\");\nvar tuple_1 = require(\"./coders/tuple\");\nvar fragments_1 = require(\"./fragments\");\nvar paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nvar paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\nvar AbiCoder = /** @class */ (function () {\n    function AbiCoder(coerceFunc) {\n        var _newTarget = this.constructor;\n        logger.checkNew(_newTarget, AbiCoder);\n        properties_1.defineReadOnly(this, \"coerceFunc\", coerceFunc || null);\n    }\n    AbiCoder.prototype._getCoder = function (param) {\n        var _this = this;\n        switch (param.baseType) {\n            case \"address\":\n                return new address_1.AddressCoder(param.name);\n            case \"bool\":\n                return new boolean_1.BooleanCoder(param.name);\n            case \"string\":\n                return new string_1.StringCoder(param.name);\n            case \"bytes\":\n                return new bytes_2.BytesCoder(param.name);\n            case \"array\":\n                return new array_1.ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n            case \"tuple\":\n                return new tuple_1.TupleCoder((param.components || []).map(function (component) {\n                    return _this._getCoder(component);\n                }), param.name);\n            case \"\":\n                return new null_1.NullCoder(param.name);\n        }\n        // u?int[0-9]*\n        var match = param.type.match(paramTypeNumber);\n        if (match) {\n            var size = parseInt(match[2] || \"256\");\n            if (size === 0 || size > 256 || (size % 8) !== 0) {\n                logger.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n            }\n            return new number_1.NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            var size = parseInt(match[1]);\n            if (size === 0 || size > 32) {\n                logger.throwArgumentError(\"invalid bytes length\", \"param\", param);\n            }\n            return new fixed_bytes_1.FixedBytesCoder(size, param.name);\n        }\n        return logger.throwArgumentError(\"invalid type\", \"type\", param.type);\n    };\n    AbiCoder.prototype._getWordSize = function () { return 32; };\n    AbiCoder.prototype._getReader = function (data, allowLoose) {\n        return new abstract_coder_1.Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n    };\n    AbiCoder.prototype._getWriter = function () {\n        return new abstract_coder_1.Writer(this._getWordSize());\n    };\n    AbiCoder.prototype.getDefaultValue = function (types) {\n        var _this = this;\n        var coders = types.map(function (type) { return _this._getCoder(fragments_1.ParamType.from(type)); });\n        var coder = new tuple_1.TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    };\n    AbiCoder.prototype.encode = function (types, values) {\n        var _this = this;\n        if (types.length !== values.length) {\n            logger.throwError(\"types/values length mismatch\", logger_1.Logger.errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types: types, values: values }\n            });\n        }\n        var coders = types.map(function (type) { return _this._getCoder(fragments_1.ParamType.from(type)); });\n        var coder = (new tuple_1.TupleCoder(coders, \"_\"));\n        var writer = this._getWriter();\n        coder.encode(writer, values);\n        return writer.data;\n    };\n    AbiCoder.prototype.decode = function (types, data, loose) {\n        var _this = this;\n        var coders = types.map(function (type) { return _this._getCoder(fragments_1.ParamType.from(type)); });\n        var coder = new tuple_1.TupleCoder(coders, \"_\");\n        return coder.decode(this._getReader(bytes_1.arrayify(data), loose));\n    };\n    return AbiCoder;\n}());\nexports.AbiCoder = AbiCoder;\nexports.defaultAbiCoder = new AbiCoder();\n//# sourceMappingURL=abi-coder.js.map"]},"metadata":{},"sourceType":"script"}